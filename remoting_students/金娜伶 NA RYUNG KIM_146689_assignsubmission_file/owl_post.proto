syntax = "proto3";

package owlpost;

service OwlPost { 
  // 請完成 client 和 server 溝通所需的 proto 設定 클라이언트와 서버가 소통하는 프로토 설정을 완성
  // Hint, 格式: rpc (messageA) returns (messageB)
  // ==== 請完成實作 (以下) ====

  rpc sendLetter (LetterRequest) returns (LetterResponse) {}


  // ==== 請完成實作 (以上) ====
  
  // 以下這是 tracker 的範例，可用來參考
  rpc TrackLetter (TrackRequest) returns (TrackResponse);

}


// 데이터 객체 형
message LetterRequest {
  string studentName = 1; 
}

message LetterResponse {
  string studentName = 1;
  string house = 2;
  string trackingId = 3;
}



// 請參考 server.js 和 track.js 來完成 server.js와 track.js를 보고 완성
// TrackRequest 和 TrackResponse 的 proto 部分
message TrackRequest { 
  // ==== 請完成實作 (以下) ====
  string pickupCode = 1;
  //string studentName= 2;
  //string house = 3;
  //string status = 4;


  // ==== 請完成實作 (以上) ====
}

message TrackResponse {
  // ==== 請完成實作 (以下) ====

  //string pickupCode = 1;
  string studentName = 1;
  string house = 2;
  string status = 3;


  // ==== 請完成實作 (以上) ====
}
